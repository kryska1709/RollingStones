package com.example.rollingstones.view

import android.R
import android.R.style
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.Card
import androidx.compose.material3.CardDefaults
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.internal.rememberComposableLambdaN
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.SpanStyle
import androidx.compose.ui.text.buildAnnotatedString
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.withStyle
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.navigation.NavController
import com.example.rollingstones.ui.theme.BackGround
import com.example.rollingstones.ui.theme.Bibliothy
import com.example.rollingstones.ui.theme.MainColor

@Composable
fun RulesView(
    navController: NavController
) {
    Column(
        modifier = Modifier
            .fillMaxSize()
            .background(BackGround)
            .verticalScroll(rememberScrollState())
            .padding(16.dp)
    ) {
        Text(
            text = "–ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤",
            fontSize = 28.sp,
            color = MainColor,
            fontWeight = FontWeight.Bold,
            fontFamily = Bibliothy,
            modifier = Modifier.padding(bottom = 12.dp)
        )

        Card(
            modifier = Modifier.fillMaxWidth(),
            colors = CardDefaults.cardColors(Color.White),
            shape = RoundedCornerShape(10.dp),
            elevation = CardDefaults.cardElevation(6.dp)
        ) {
            Column(modifier = Modifier.padding(16.dp)) {
                Text(
                    text = "üéØ –û–±—â–∏–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è",
                    fontSize = 20.sp,
                    color = MainColor,
                    fontWeight = FontWeight.SemiBold
                )
                Spacer(modifier = Modifier.height(8.dp))

                Text(
                    text = buildAnnotatedString {
                        withStyle(style = SpanStyle(color = Color.DarkGray, fontSize = 16.sp, fontFamily = Bibliothy)) {
                            append("1. ")
                        }
                        withStyle(style = SpanStyle(color = MainColor, fontSize = 16.sp, fontFamily = Bibliothy)) {
                            append("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
                        }
                        withStyle(style = SpanStyle(color = Color.DarkGray, fontSize = 16.sp)) {
                            append(" ‚Äî –ª–∏—Ü–æ, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –∑–∞ –±–µ—Å–ø–µ—Ä–µ–±–æ–π–Ω—É—é —Ä–∞–±–æ—Ç—É –±–æ—É–ª–∏–Ω–≥-–∫–ª—É–±–∞, –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –≥–æ—Å—Ç–µ–π –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é –ø–µ—Ä—Å–æ–Ω–∞–ª–∞.")
                        }
                    }
                )

                Text(
                    text = buildAnnotatedString {
                        withStyle (style = SpanStyle(color = Color.DarkGray, fontSize = 16.sp, fontFamily = Bibliothy)){
                            append("2. ")
                        }
                        withStyle(style = SpanStyle(color = MainColor, fontSize = 16.sp, fontFamily = Bibliothy)) {
                            append("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
                        }
                        withStyle(style = SpanStyle(color = Color.DarkGray, fontSize = 16.sp)) {
                            append(" –æ–±—è–∑–∞–Ω —Å–æ–±–ª—é–¥–∞—Ç—å –≤–µ–∂–ª–∏–≤–æ—Å—Ç—å, –ø—É–Ω–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫–æ –≤—Å–µ–º –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è–º –∫–ª—É–±–∞.")
                        }
                    }
                )

                Text(
                    text = buildAnnotatedString {
                        withStyle (style = SpanStyle(color = Color.DarkGray, fontSize = 16.sp, fontFamily = Bibliothy, fontWeight = FontWeight.Thin)){
                            append("3. ")
                        }
                        withStyle(style = SpanStyle(color = MainColor, fontSize = 16.sp, fontFamily = Bibliothy)) {
                            append("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
                        }
                        withStyle(style = SpanStyle(color = Color.DarkGray, fontSize = 16.sp)) {
                            append(" ‚Äî –ª–∏—Ü–æ, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–µ–µ –∏–º–∏–¥–∂ RollingStones. –í–Ω–µ—à–Ω–∏–π –≤–∏–¥, —Ä–µ—á—å –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –¥–æ–ª–∂–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–µ–º–∏—É–º-–∫–ª–∞—Å—Å–∞.")
                        }
                    }
                )
            }
        }

        Spacer(modifier = Modifier.height(16.dp))

        Card(
            modifier = Modifier.fillMaxWidth(),
            colors = CardDefaults.cardColors(Color.White),
            shape = RoundedCornerShape(10.dp),
            elevation = CardDefaults.cardElevation(6.dp)
        ) {
            Column(modifier = Modifier.padding(16.dp)) {
                Text(
                    text = "üõ†Ô∏è –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
                    fontSize = 20.sp,
                    color = MainColor,
                    fontWeight = FontWeight.SemiBold
                )

                Spacer(modifier = Modifier.height(12.dp))
                Text(
                    text = "üìå –ü–µ—Ä–µ–¥ –æ—Ç–∫—Ä—ã—Ç–∏–µ–º –∫–ª—É–±–∞:",
                    fontSize = 18.sp,
                    fontWeight = FontWeight.Bold,
                    color = MainColor
                )
                Text("‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∑–∞–ª–∞, –¥–æ—Ä–æ–∂–µ–∫, –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏ –∫–∞—Å—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã.", fontSize = 16.sp, color = Color.DarkGray)
                Text("‚Ä¢ –£–±–µ–¥–∏—Ç—å—Å—è –≤ –Ω–∞–ª–∏—á–∏–∏ —Ä–∞—Å—Ö–æ–¥–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ (—à–∞—Ä—ã, –æ–±—É–≤—å, –∞–Ω—Ç–∏—Å–µ–ø—Ç–∏–∫–∏ –∏ —Ç.–¥.).", fontSize = 16.sp, color = Color.DarkGray)
                Text("‚Ä¢ –ü—Ä–æ–≤–µ—Å—Ç–∏ –∫—Ä–∞—Ç–∫–∏–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –ø–æ —Å–º–µ–Ω–µ.", fontSize = 16.sp, color = Color.DarkGray)

                Spacer(modifier = Modifier.height(12.dp))
                Text(
                    text = "üí¨ –í–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:",
                    fontSize = 18.sp,
                    fontWeight = FontWeight.Bold,
                    color = MainColor
                )
                Text("‚Ä¢ –í—Å—Ç—Ä–µ—á–∞—Ç—å –≥–æ—Å—Ç–µ–π —Å —É–ª—ã–±–∫–æ–π, –ø–æ–º–æ–≥–∞—Ç—å —Å –≤—ã–±–æ—Ä–æ–º –¥–æ—Ä–æ–∂–∫–∏ –∏ –∞—Ä–µ–Ω–¥–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è.", fontSize = 16.sp, color = Color.DarkGray)
                Text("‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–ø–æ–ª–∞–¥–∫–∏.", fontSize = 16.sp, color = Color.DarkGray)
                Text("‚Ä¢ –°–ª–µ–¥–∏—Ç—å –∑–∞ —á–∏—Å—Ç–æ—Ç–æ–π –∏ –ø–æ—Ä—è–¥–∫–æ–º –≤ –∑–∞–ª–µ.", fontSize = 16.sp, color = Color.DarkGray)
                Text("‚Ä¢ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ–Ω–ª–∞–π–Ω-–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏.", fontSize = 16.sp, color = Color.DarkGray)
                Text("‚Ä¢ –†–µ—à–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏.", fontSize = 16.sp, color = Color.DarkGray)
                Text("‚Ä¢ –°–ª–µ–¥–∏—Ç—å –∑–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ–º –ø—Ä–∞–≤–∏–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.", fontSize = 16.sp, color = Color.DarkGray)

                Spacer(modifier = Modifier.height(12.dp))
                Text(
                    text = "üßæ –ü–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–º–µ–Ω—ã:",
                    fontSize = 18.sp,
                    fontWeight = FontWeight.Bold,
                    color = MainColor
                )
                Text("‚Ä¢ –°–¥–∞—Ç—å —Å–º–µ–Ω—É –ø–æ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç—É.", fontSize = 16.sp, color = Color.DarkGray)
                Text("‚Ä¢ –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –æ—Ç—á—ë—Ç –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è—Ö –∏ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞—Ö.", fontSize = 16.sp, color = Color.DarkGray)
                Text("‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –∑–∞–∫—Ä—ã—Ç—å –ø–æ–º–µ—â–µ–Ω–∏–µ.", fontSize = 16.sp, color = Color.DarkGray)
            }
        }

        Spacer(modifier = Modifier.height(16.dp))

        Card(
            modifier = Modifier.fillMaxWidth(),
            colors = CardDefaults.cardColors(Color.White),
            shape = RoundedCornerShape(10.dp),
            elevation = CardDefaults.cardElevation(6.dp)
        ) {
            Column(modifier = Modifier.padding(16.dp)) {
                Text("üë®‚Äçüíª –†–∞–±–æ—Ç–∞ —Å —Å–∏—Å—Ç–µ–º–æ–π –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è", fontSize = 20.sp, color = MainColor, fontWeight = FontWeight.SemiBold)
                Spacer(modifier = Modifier.height(8.dp))
                Text("‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π.", fontSize = 16.sp, color = Color.DarkGray)
                Text("‚Ä¢ –í—Å–µ –∑–∞—è–≤–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–Ω–µ—Å–µ–Ω—ã –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.", fontSize = 16.sp, color = Color.DarkGray)
                Text("‚Ä¢ –ü—Ä–∏ –Ω–∞–∫–ª–∞–¥–∫–∞—Ö –Ω–∞—Ö–æ–¥–∏—Ç—å –∑–∞–º–µ–Ω—É –∏ –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞.", fontSize = 16.sp, color = Color.DarkGray)
            }
        }

        Spacer(modifier = Modifier.height(16.dp))

        // üßç‚Äç‚ôÄÔ∏è –†–∞–±–æ—Ç–∞ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º
        Card(
            modifier = Modifier.fillMaxWidth(),
            colors = CardDefaults.cardColors(Color.White),
            shape = RoundedCornerShape(10.dp),
            elevation = CardDefaults.cardElevation(6.dp)
        ) {
            Column(modifier = Modifier.padding(16.dp)) {
                Text("üßç‚Äç‚ôÄÔ∏è –†–∞–±–æ—Ç–∞ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º", fontSize = 20.sp, color = MainColor, fontWeight = FontWeight.SemiBold)
                Spacer(modifier = Modifier.height(8.dp))
                Text("‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ‚Äî —Å—Ç–∞—Ä—à–∏–π –ø–æ —Å–º–µ–Ω–µ, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞.", fontSize = 16.sp, color = Color.DarkGray)
                Text("‚Ä¢ –ü—Ä–∏ –ß–ü –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ä–µ—à–µ–Ω–∏—è –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ.", fontSize = 16.sp, color = Color.DarkGray)
                Text("‚Ä¢ –°–ª–µ–¥–∏—Ç –∑–∞ –≤–Ω–µ—à–Ω–∏–º –≤–∏–¥–æ–º –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.", fontSize = 16.sp, color = Color.DarkGray)
            }
        }

        Spacer(modifier = Modifier.height(16.dp))

        // üì¶ –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
        Card(
            modifier = Modifier.fillMaxWidth(),
            colors = CardDefaults.cardColors(Color.White),
            shape = RoundedCornerShape(10.dp),
            elevation = CardDefaults.cardElevation(6.dp)
        ) {
            Column(modifier = Modifier.padding(16.dp)) {
                Text("üì¶ –†–∞–±–æ—Ç–∞ —Å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º –∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—ë–º", fontSize = 20.sp, color = MainColor, fontWeight = FontWeight.SemiBold)
                Spacer(modifier = Modifier.height(8.dp))
                Text("‚Ä¢ –ü—Ä–æ–≤–æ–¥–∏—Ç—å –æ—Å–º–æ—Ç—Ä –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–¥ —Å–º–µ–Ω–æ–π.", fontSize = 16.sp, color = Color.DarkGray)
                Text("‚Ä¢ –°–æ–æ–±—â–∞—Ç—å –æ –ø–æ–ª–æ–º–∫–∞—Ö, –æ—Ñ–æ—Ä–º–ª—è—Ç—å –∑–∞—è–≤–∫–∏ –Ω–∞ —Ä–µ–º–æ–Ω—Ç.", fontSize = 16.sp, color = Color.DarkGray)
                Text("‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–∑–≤—Ä–∞—Ç –æ–±—É–≤–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç—å —à–∞—Ä–æ–≤.", fontSize = 16.sp, color = Color.DarkGray)
            }
        }

        Spacer(modifier = Modifier.height(16.dp))

        // ‚ö†Ô∏è –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å
        Card(
            modifier = Modifier.fillMaxWidth(),
            colors = CardDefaults.cardColors(Color.White),
            shape = RoundedCornerShape(10.dp),
            elevation = CardDefaults.cardElevation(6.dp)
        ) {
            Column(modifier = Modifier.padding(16.dp)) {
                Text("‚ö†Ô∏è –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å", fontSize = 20.sp, color = MainColor, fontWeight = FontWeight.SemiBold)
                Spacer(modifier = Modifier.height(8.dp))
                Text("‚Ä¢ –ó–∞ –≥—Ä—É–±–æ—Å—Ç—å –∏ —Ö–∞–ª–∞—Ç–Ω–æ—Å—Ç—å ‚Äî –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞—Ä–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å.", fontSize = 16.sp, color = Color.DarkGray)
                Text("‚Ä¢ –ó–∞ —É—Ç—Ä–∞—Ç—É –∏–º—É—â–µ—Å—Ç–≤–∞ ‚Äî –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å.", fontSize = 16.sp, color = Color.DarkGray)
            }
        }

        Spacer(modifier = Modifier.height(16.dp))

        Card(
            modifier = Modifier.fillMaxWidth(),
            colors = CardDefaults.cardColors(Color.White),
            shape = RoundedCornerShape(10.dp),
            elevation = CardDefaults.cardElevation(6.dp)
        ) {
            Column(modifier = Modifier.padding(16.dp)) {
                Text("üí° –ü—Ä–∏–Ω—Ü–∏–ø—ã RollingStones", fontSize = 20.sp, color = MainColor, fontWeight = FontWeight.SemiBold)
                Spacer(modifier = Modifier.height(8.dp))
                Text("‚Ä¢ –ì–æ—Å—Ç—å –≤—Å–µ–≥–¥–∞ –ø—Ä–∞–≤.", fontSize = 16.sp, color = Color.DarkGray)
                Text("‚Ä¢ –ö–∞–∂–¥—ã–π –≤–∏–∑–∏—Ç ‚Äî –ø—Ä–∞–∑–¥–Ω–∏–∫.", fontSize = 16.sp, color = Color.DarkGray)
                Text("‚Ä¢ –ë—ã—Å—Ç—Ä–æ, –≤–µ–∂–ª–∏–≤–æ, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ.", fontSize = 16.sp, color = Color.DarkGray)
            }
        }

        Spacer(modifier = Modifier.height(32.dp))
    }
}
